use.miden::note
use.miden::output_note
use.miden::tx

#Â CONSTANTS
# =================================================================================================

#Â ERRORS
# =================================================================================================

# ANONYMIZER script expects exactly 12 note inputs
const.ERR_ANONYMIZER_WRONG_NUMBER_OF_INPUTS="wrong number of inputs"

# ANONYMIZER script requires exactly 1 note asset
const.ERR_ANONYMIZER_WRONG_NUMBER_OF_ASSETS="wrong number of assets"

#! ANONYMIZER script:
#! Creates a note consumable by anonymizer, containing the same asset.
#!
#! Inputs:  []
#! Outputs: []
#!
#! Note inputs are assumed to be as follows:
#! - ASSET
#! - RECIPIENT
#! - [hint, note_type, aux, tag]
begin
    # drop note arguments
    dropw

    # store note inputs into memory starting at address 0
    # TODO use active_note once changes propagate to client repo
    push.0 exec.note::get_inputs
    # => [num_inputs, inputs_ptr]

    # make sure the number of inputs is 12
    eq.12 assert.err=ERR_ANONYMIZER_WRONG_NUMBER_OF_INPUTS
    # => [inputs_ptr]

    # load ASSET
    mem_loadw
    # => [ASSET]

    padw mem_loadw.4
    # => [RECIPIENT, ASSET]

    padw mem_loadw.8
    # => [tag, aux, note_type, execution_hint, RECIPIENT, ASSET]
    debug.stack

    # create a note using inputs
    exec.output_note::create
    debug.stack.5
    # => [note_idx, ASSET]

    debug.stack

    movdn.4
    # => [ASSET, note_idx, pad(11)]
    # add asset to the note
    exec.output_note::add_asset
    # => [ASSET, note_idx]

    # clean stack
    dropw dropw dropw dropw
    # => []
end
