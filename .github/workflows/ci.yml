name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, repoened, synchronize]

jobs:
  test:
    name: Test Rust ${{matrix.toolchain}} on ${{matrix.os}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly]
        os: [ubuntu]
    steps:
      - uses: actions/checkout@main
      - name: Install rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.toolchain}}
      - uses: taiki-e/install-action@nextest
      - name: make - test
        run: make test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Install minimal stable with clippy
        uses: dtolnay/rust-toolchain@master
        with:
          components: clippy
          toolchain: stable
      - name: make - clippy-all
        run: make clippy-all

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Install minimal nightly with rustfmt
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: make - format
        run: make format

  integration_tests:
    name: integration_tests
    runs-on: ubuntu-latest
    needs: [clippy, rustfmt]
    steps:
      - uses: actions/checkout@main
      - name: Install minimal stable with rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: taiki-e/install-action@nextest
      - run: make clean-node
      - run: make node
      - run: make start-node > /dev/null &
      - run: make integration-test
      - name: Kill miden-node
        if: always()
        run: make kill-node

  docs:
    name: build mkdocs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install minimal stable with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV 
      - uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: make doc-build 
